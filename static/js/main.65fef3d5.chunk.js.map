{"version":3,"sources":["components/app/app.tsx","index.tsx"],"names":["App","useState","letters","setLetters","cursorRef","useRef","keyDownHandler","event","test","key","length","prevState","slice","useEffect","document","addEventListener","removeEventListener","current","scrollIntoView","behavior","className","map","l","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"gNA6CeA,G,MAxCO,WAAO,IAAD,EACIC,mBAAkB,IADtB,mBACnBC,EADmB,KACVC,EADU,KAEpBC,EAAYC,iBAAuB,MAEnCC,EAAiB,SAACC,GAClB,sCAAkBC,KAAKD,EAAME,MAA6B,IAArBF,EAAME,IAAIC,OACjDP,GAAW,SAAAQ,GAAS,4BAAQA,GAAR,CAAmBJ,EAAME,SACpC,cAAAF,EAAME,KACfN,GAAW,SAAAQ,GAAS,OAAI,YAAIA,GAAWC,MAAM,EAAGD,EAAUD,OAAS,OAkBvE,OAdAG,qBAAU,WAGR,OAFAC,SAASC,iBAAT,UAAqCT,GAE7B,WACNQ,SAASE,oBAAT,UAAwCV,MAEzC,IAEHO,qBAAU,WACiB,IAAD,EAAN,OAAdT,IACF,UAAAA,EAAUa,eAAV,SAAmBC,eAAe,CAACC,SAAS,eAK9C,yBAAKC,UAAU,OACb,uBAAGA,UAAU,aAETlB,EAAQmB,KAAI,SAAAC,GAAC,OACX,0BAAMF,UAAU,UAAUE,OAIhC,yBAAKF,UAAU,SAASG,IAAKnB,OCnCnCoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFZ,SAASa,eAAe,U","file":"static/js/main.65fef3d5.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef, useLayoutEffect} from 'react';\nimport './app.scss';\n\ntype Letters = string[]\n\nconst App: React.FC = () => {\n  const [letters, setLetters] = useState<Letters>([]);\n  const cursorRef = useRef<HTMLDivElement>(null);\n\n  const keyDownHandler = (event: KeyboardEvent) => {\n    if (/^[A-Za-zА-Яа-я]/.test(event.key) && event.key.length === 1) {\n      setLetters(prevState => [...prevState, event.key]);\n    } else if (event.key === `Backspace`) {\n      setLetters(prevState => [...prevState].slice(0, prevState.length - 1))\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(`keydown`, keyDownHandler);\n\n    return (() => {\n      document.removeEventListener(`keydown`, keyDownHandler);\n    })\n  }, [])\n\n  useEffect(() => {\n    if (cursorRef !== null) {\n      cursorRef.current?.scrollIntoView({behavior: `smooth`});\n    }\n  })\n\n  return (\n    <div className=\"app\">\n      <p className=\"word-line\">\n        {\n          letters.map(l => (\n            <span className=\"letter\">{l}</span>\n          ))\n        }\n      </p>\n      <div className=\"cursor\" ref={cursorRef}></div>\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}